import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  Modal,
  TouchableOpacity,
  Image,
  ScrollView,
} from "react-native";
import MapView, { Marker, Callout, Polygon } from "react-native-maps";
import {
  getAllDangers,
  getDangerDetail,
} from "../../../src/lib/apis/dangerApi"; // API Ìò∏Ï∂ú Ìï®Ïàò

const DetailsScreen = ({ navigation }) => {
  const [isModalVisible, setModalVisible] = useState(false);
  const [isDangerDetailModalVisible, setDangerDetailModalVisible] =
    useState(false); // ÏúÑÌóò ÏÉÅÏÑ∏ Î™®Îã¨ ÏÉÅÌÉú
  const [selectedFilter, setSelectedFilter] = useState("ÏúÑÌóòÍµ¨Ïó≠");
  const [dangers, setDangers] = useState([]);
  const [selectedDanger, setSelectedDanger] = useState(null);

  const campusMarkers = [
    // Í≥µÎ∂ÄÌïòÎäî Ï§ë üìù
    {
      latitude: 37.5587,
      longitude: 127.0003,
      title: "Í≥µÎ∂ÄÌïòÎäî Ï§ë üìù",
      emoji: "üìù",
    },

    // Î™ÖÏÉÅÌïòÎäî Ï§ë üßò
    {
      latitude: 37.5584,
      longitude: 127.0005,
      title: "Î™ÖÏÉÅÌïòÎäî Ï§ë üßò",
      emoji: "üßò",
    },
    {
      latitude: 37.5586,
      longitude: 127.0007,
      title: "Î™ÖÏÉÅÌïòÎäî Ï§ë üßò",
      emoji: "üßò",
    },

    // Ïö¥ÎèôÌïòÎäî Ï§ë üèãÔ∏è
    {
      latitude: 37.5582,
      longitude: 127.0009,
      title: "Ïö¥ÎèôÌïòÎäî Ï§ë üèãÔ∏è",
      emoji: "üèãÔ∏è",
    },
    {
      latitude: 37.5589,
      longitude: 127.0004,
      title: "Ïö¥ÎèôÌïòÎäî Ï§ë üèãÔ∏è",
      emoji: "üèãÔ∏è",
    },

    // ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂
    {
      latitude: 37.5581,
      longitude: 127.001,
      title: "ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂",
      emoji: "üö∂",
    },
    {
      latitude: 37.5583,
      longitude: 127.0008,
      title: "ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂",
      emoji: "üö∂",
    },

    // Ïª§Ìîº ÎßàÏãúÎäî Ï§ë ‚òï
    {
      latitude: 37.5582,
      longitude: 127.0012,
      title: "Ïª§Ìîº ÎßàÏãúÎäî Ï§ë ‚òï",
      emoji: "‚òï",
    },
    {
      latitude: 37.5584,
      longitude: 127.0014,
      title: "Ïª§Ìîº ÎßàÏãúÎäî Ï§ë ‚òï",
      emoji: "‚òï",
    },

    // Ï±Ö ÏùΩÎäî Ï§ë üìñ
    {
      latitude: 37.558,
      longitude: 127.0011,
      title: "Ï±Ö ÏùΩÎäî Ï§ë üìñ",
      emoji: "üìñ",
    },
    {
      latitude: 37.5586,
      longitude: 127.0013,
      title: "Ï±Ö ÏùΩÎäî Ï§ë üìñ",
      emoji: "üìñ",
    },

    // Í≤åÏûÑÌïòÎäî Ï§ë üéÆ
    {
      latitude: 37.559,
      longitude: 127.0042,
      title: "Í≤åÏûÑÌïòÎäî Ï§ë üéÆ",
      emoji: "üéÆ",
    },
    {
      latitude: 37.5593,
      longitude: 127.0045,
      title: "Í≤åÏûÑÌïòÎäî Ï§ë üéÆ",
      emoji: "üéÆ",
    },

    // ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂‚Äç‚ôÄÔ∏è
    {
      latitude: 37.56,
      longitude: 127.005,
      title: "ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂‚Äç‚ôÄÔ∏è",
      emoji: "üö∂‚Äç‚ôÄÔ∏è",
    },
    {
      latitude: 37.5605,
      longitude: 127.0055,
      title: "ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂‚Äç‚ôÄÔ∏è",
      emoji: "üö∂‚Äç‚ôÄÔ∏è",
    },

    // ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂‚Äç‚ôÇÔ∏è
    {
      latitude: 37.5602,
      longitude: 127.006,
      title: "ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂‚Äç‚ôÇÔ∏è",
      emoji: "üö∂‚Äç‚ôÇÔ∏è",
    },
    {
      latitude: 37.5608,
      longitude: 127.0065,
      title: "ÏÇ∞Ï±ÖÌïòÎäî Ï§ë üö∂‚Äç‚ôÇÔ∏è",
      emoji: "üö∂‚Äç‚ôÇÔ∏è",
    },

    // ÏùåÏïÖ Îì£Îäî Ï§ë üéß
    {
      latitude: 37.561,
      longitude: 127.0068,
      title: "ÏùåÏïÖ Îì£Îäî Ï§ë üéß",
      emoji: "üéß",
    },
    {
      latitude: 37.5612,
      longitude: 127.007,
      title: "ÏùåÏïÖ Îì£Îäî Ï§ë üéß",
      emoji: "üéß",
    },

    // Ï∂îÍ∞ÄÏ†ÅÏù∏ ÏòàÏãúÎ°ú ÌôúÎèôÌïòÎäî Ï§ëÎì§
    {
      latitude: 37.5615,
      longitude: 127.0073,
      title: "ÏûêÏ†ÑÍ±∞ ÌÉÄÎäî Ï§ë üö¥",
      emoji: "üö¥",
    },
    {
      latitude: 37.5618,
      longitude: 127.0075,
      title: "ÏûêÏ†ÑÍ±∞ ÌÉÄÎäî Ï§ë üö¥",
      emoji: "üö¥",
    },
  ];

  const openModal = () => setModalVisible(true);
  const closeModal = () => setModalVisible(false);
  const openDangerDetailModal = () => setDangerDetailModalVisible(true); // ÏúÑÌóò ÏÉÅÏÑ∏ Î™®Îã¨ Ïó¥Í∏∞
  const closeDangerDetailModal = () => setDangerDetailModalVisible(false); // ÏúÑÌóò ÏÉÅÏÑ∏ Î™®Îã¨ Îã´Í∏∞

  const handleFilterSelect = (filter) => {
    setSelectedFilter(filter);
    closeModal();
  };

  const navigateToReportPage = () => {
    navigation.navigate("ReportDangerZone");
    setModalVisible(false); // Î™®Îã¨ Îã´Í∏∞
  };

  // ÏúÑÌóò ÏöîÏÜå Î™©Î°ùÏùÑ Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò
  const fetchDangers = async () => {
    try {
      const data = await getAllDangers();
      setDangers(data);
    } catch (error) {
      console.error("Error fetching dangers:", error);
    }
  };

  // ÌäπÏ†ï ÏúÑÌóò ÏöîÏÜåÏùò ÏÉÅÏÑ∏ Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ìï®Ïàò
  const fetchDangerDetail = async (dangerId) => {
    try {
      const dangerDetail = await getDangerDetail(dangerId);
      setSelectedDanger(dangerDetail);
      openDangerDetailModal(); // ÏúÑÌóò ÏÉÅÏÑ∏ Î™®Îã¨ Ïó¥Í∏∞
    } catch (error) {
      console.error("Error fetching danger detail:", error);
    }
  };

  // Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
  useEffect(() => {
    fetchDangers();
  }, []);

  return (
    <View style={styles.container}>
      {/* ÏßÄÎèÑ */}
      <MapView
        style={styles.map}
        initialRegion={{
          latitude: 37.5585,
          longitude: 127.0001,
          latitudeDelta: 0.005,
          longitudeDelta: 0.005,
        }}
      >
        {/* ÎÇ¥ ÏúÑÏπò ÎßàÏª§ */}
        <Marker
          coordinate={{
            latitude: 37.5585,
            longitude: 127.0001,
          }}
          title="ÎÇ¥ ÏúÑÏπò"
        >
          <Image
            source={require("../DetailsScreen/assets/My.png")} // My.png Ïù¥ÎØ∏ÏßÄ Í≤ΩÎ°ú
            style={{ width: 40, height: 47, zIndex: 1 }} // zIndex Ï∂îÍ∞Ä
          />
        </Marker>

        {/* Ï∫†ÌçºÏä§ ÌôúÎèô ÎßàÏª§ (selectedFilter === "Ï∫†ÌçºÏä§ ÌôúÎèô"Ïùº ÎïåÎßå ÌëúÏãú) */}
        {selectedFilter === "Ï∫†ÌçºÏä§ ÌôúÎèô" &&
          campusMarkers.map((marker, index) => (
            <Marker
              key={index}
              coordinate={{
                latitude: marker.latitude,
                longitude: marker.longitude,
              }}
              title={marker.title}
            >
              <View
                style={{
                  justifyContent: "center",
                  alignItems: "center",
                  overflow: "visible",
                }}
              >
                <Text style={{ fontSize: 30 }}>{marker.emoji}</Text>
              </View>
              <Callout>
                <Text>
                  {marker.emoji} {marker.title}
                </Text>
              </Callout>
            </Marker>
          ))}

        {/* Í≤ΩÎπÑÏã§ ÎßàÏª§ */}
        {selectedFilter === "Í≤ΩÎπÑÏã§" && (
          <>
            {/* Ï≤´ Î≤àÏß∏ Í≤ΩÎπÑÏã§ ÎßàÏª§ */}
            <Marker
              coordinate={{ latitude: 37.5587, longitude: 127.0003 }}
              title="Í≤ΩÎπÑÏã§ 1"
            >
              <Image
                source={require("../DetailsScreen/assets/Marker1.png")}
                style={{ width: 25, height: 25 }}
              />
              <Callout>
                <View style={styles.calloutContainer}>
                  <Text style={styles.calloutTitle}>Í≤ΩÎπÑÏã§ 1</Text>
                  <Text style={styles.calloutDescription}>
                    Common Rail Fuel Injection
                  </Text>
                </View>
              </Callout>
            </Marker>

            {/* Îëê Î≤àÏß∏ Í≤ΩÎπÑÏã§ ÎßàÏª§ */}
            <Marker
              coordinate={{ latitude: 37.559, longitude: 127.001 }}
              title="Í≤ΩÎπÑÏã§ 2"
            >
              <Image
                source={require("../DetailsScreen/assets/Marker1.png")}
                style={{ width: 25, height: 25 }}
              />
              <Callout>
                <View style={styles.calloutContainer}>
                  <Text style={styles.calloutTitle}>Í≤ΩÎπÑÏã§ 2</Text>
                  <Text style={styles.calloutDescription}>
                    Emergency Response Location
                  </Text>
                </View>
              </Callout>
            </Marker>

            {/* ÏÑ∏ Î≤àÏß∏ Í≤ΩÎπÑÏã§ ÎßàÏª§ */}
            <Marker
              coordinate={{ latitude: 37.5595, longitude: 127.0015 }}
              title="Í≤ΩÎπÑÏã§ 3"
            >
              <Image
                source={require("../DetailsScreen/assets/Marker1.png")}
                style={{ width: 25, height: 25 }}
              />
              <Callout>
                <View style={styles.calloutContainer}>
                  <Text style={styles.calloutTitle}>Í≤ΩÎπÑÏã§ 3</Text>
                  <Text style={styles.calloutDescription}>
                    Secure Access Area
                  </Text>
                </View>
              </Callout>
            </Marker>
          </>
        )}

        {/* ÏúÑÌóòÍµ¨Ïó≠ ÎßàÏª§ */}
        {selectedFilter === "ÏúÑÌóòÍµ¨Ïó≠" &&
          dangers.map((danger) => (
            <Marker
              key={danger.dangerId}
              coordinate={{
                latitude: danger.latitude,
                longitude: danger.longitude,
              }}
              title={danger.buildingName}
              pinColor="red"
              onPress={() => fetchDangerDetail(danger.dangerId)}
            >
              <Image
                source={require("../DetailsScreen/assets/Marker2.png")}
                style={{ width: 25, height: 25 }}
              />
              <Callout>
                <View style={styles.calloutContainer}>
                  <Text style={styles.calloutTitle}>{danger.buildingName}</Text>
                  <Text style={styles.calloutDescription}>
                    {danger.content}
                  </Text>
                </View>
              </Callout>
            </Marker>
          ))}

        {/* Ïù∏Íµ¨ Î∞ÄÏßëÎèÑ */}
        {selectedFilter === "Ïù∏Íµ¨ Î∞ÄÏßëÎèÑ" && (
          <>
            {/* Ï≤´ Î≤àÏß∏ Ï¥àÎ°ùÏÉâ Polygon */}
            <Polygon
              coordinates={[
                { latitude: 37.5582, longitude: 127.0001 },
                { latitude: 37.5585, longitude: 127.001 },
                { latitude: 37.559, longitude: 127.0008 },
                { latitude: 37.5593, longitude: 127.0002 },
              ]}
              fillColor="rgba(0, 255, 0, 0.3)" // Ï¥àÎ°ùÏÉâ
              strokeColor="rgba(0, 255, 0, 0.7)" // Ï¥àÎ°ùÏÉâ Í≤ΩÍ≥ÑÏÑ†
            />

            {/* Îëê Î≤àÏß∏ Îπ®Í∞ÑÏÉâ Polygon */}
            <Polygon
              coordinates={[
                { latitude: 37.5595, longitude: 127.0015 },
                { latitude: 37.5598, longitude: 127.002 },
                { latitude: 37.5603, longitude: 127.0018 },
                { latitude: 37.5605, longitude: 127.0013 },
              ]}
              fillColor="rgba(255, 0, 0, 0.3)" // Îπ®Í∞ÑÏÉâ
              strokeColor="rgba(255, 0, 0, 0.7)" // Îπ®Í∞ÑÏÉâ Í≤ΩÍ≥ÑÏÑ†
            />
          </>
        )}
      </MapView>

      {/* ÏÉÅÎã® Î∞î */}
      <View style={styles.header}>
        <TouchableOpacity
          style={styles.backButton}
          onPress={() => navigation.goBack()}
        >
          <Image
            style={styles.backIcon}
            resizeMode="cover"
            source={require("../DetailsScreen/assets/Back.png")}
          />
        </TouchableOpacity>

        <TouchableOpacity style={styles.filterButton} onPress={openModal}>
          <Image
            style={styles.filterIcon}
            resizeMode="cover"
            source={require("../DetailsScreen/assets/Group.png")}
          />
        </TouchableOpacity>
      </View>

      {/* ÌïÑÌÑ∞ Î™®Îã¨ */}
      <Modal
        visible={isModalVisible}
        animationType="slide"
        transparent={true}
        onRequestClose={closeModal}
      >
        <View style={styles.modalContainer}>
          <View style={styles.infoPanel}>
            <TouchableOpacity onPress={closeModal} style={styles.closeButton}>
              <Image
                style={styles.closeButtonImage}
                source={require("../DetailsScreen/assets/Delete.png")}
              />
            </TouchableOpacity>
            <View style={styles.infoTitleContainer}>
              <Text style={styles.infoTitle}>ÌòÑÏû¨ ÎÇ¥ Ï£ºÎ≥Ä</Text>
            </View>
            <View style={styles.infoSubtitleContainer}>
              <Image
                style={styles.arrowImage}
                source={require("../DetailsScreen/assets/Arrow.png")}
              />
              <Text style={styles.infoSubtitle}>Ïã†Í≥µÌïôÍ¥Ä</Text>
            </View>
          </View>
          <View style={styles.modalContent}>
            <Text style={styles.filterTitle}>Filter</Text>

            <ScrollView
              horizontal
              showsHorizontalScrollIndicator={false}
              contentContainerStyle={styles.filterButtonsContainer}
            >
              <TouchableOpacity
                onPress={() => handleFilterSelect("Í≤ΩÎπÑÏã§")}
                style={styles.filterOption}
              >
                <Image
                  source={require("../DetailsScreen/assets/security.png")}
                  style={{ width: 28, height: 25, marginBottom: 8 }}
                />
                <Text style={styles.filterText}>Í≤ΩÎπÑÏã§</Text>
                <Text style={styles.filterDescription}>security office</Text>
              </TouchableOpacity>

              <TouchableOpacity
                onPress={() => handleFilterSelect("Ïù∏Íµ¨ Î∞ÄÏßëÎèÑ")}
                style={styles.filterOption}
              >
                <Image
                  source={require("../DetailsScreen/assets/Population.png")}
                  style={{ width: 25, height: 22, marginBottom: 8 }}
                />
                <Text style={styles.filterText}>Ïù∏Íµ¨ Î∞ÄÏßëÎèÑ</Text>
                <Text style={styles.filterDescription}>population density</Text>
              </TouchableOpacity>

              <TouchableOpacity
                onPress={() => handleFilterSelect("ÏúÑÌóòÍµ¨Ïó≠")}
                style={styles.filterOption}
              >
                <Image
                  source={require("../DetailsScreen/assets/Danger.png")}
                  style={{ width: 25, height: 22, marginBottom: 8 }}
                />
                <Text style={styles.filterText}>ÏúÑÌóòÍµ¨Ïó≠</Text>
                <Text style={styles.filterDescription}>danger Zone</Text>
              </TouchableOpacity>
            </ScrollView>

            <View style={styles.bottomSection}>
              <TouchableOpacity
                onPress={() => handleFilterSelect("Ï∫†ÌçºÏä§ ÌôúÎèô")}
              >
                <Image
                  source={require("../DetailsScreen/assets/Campus.png")}
                  style={{ width: 370, height: 79, marginBottom: 8 }}
                />
              </TouchableOpacity>

              <TouchableOpacity onPress={navigateToReportPage}>
                <Image
                  source={require("../DetailsScreen/assets/ReportDanger.png")}
                  style={{ width: 380, height: 79, marginBottom: 8 }}
                />
              </TouchableOpacity>
            </View>
          </View>
        </View>
      </Modal>

      {/* ÏúÑÌóò ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Î™®Îã¨ */}
      <Modal
        visible={isDangerDetailModalVisible}
        animationType="slide"
        transparent={true}
        onRequestClose={closeDangerDetailModal}
      >
        <View style={styles.modalContainer}>
          <View style={styles.modalContent}>
            <TouchableOpacity
              onPress={closeDangerDetailModal}
              style={styles.closeButton}
            >
              <Image
                style={styles.closeButtonImage}
                source={require("../DetailsScreen/assets/Delete.png")}
              />
            </TouchableOpacity>
            <Text style={styles.modalTitle}>ÏúÑÌóò ÏÉÅÏÑ∏ Ï†ïÎ≥¥</Text>

            {/* ÏúÑÌóò Ï†ïÎ≥¥ÏôÄ Ïù¥ÎØ∏ÏßÄ */}
            {selectedDanger && (
              <>
                <Text style={styles.modalText}>{selectedDanger.content}</Text>
                {selectedDanger.imageUrl && (
                  <Image
                    source={{ uri: selectedDanger.imageUrl }}
                    style={styles.modalImage}
                  />
                )}
              </>
            )}

            <TouchableOpacity
              style={styles.alertButton}
              onPress={closeDangerDetailModal}
            >
              <Text style={styles.alertButtonText}>Îã´Í∏∞</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  map: {
    width: "100%",
    height: "100%",
  },
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    paddingTop: 40,
    paddingHorizontal: 20,
    position: "absolute",
    top: 0,
    left: 0,
    right: 0,
    zIndex: 1,
  },
  backButton: {
    padding: 10,
  },
  backIcon: {
    width: 24,
    height: 24,
  },
  filterButton: {
    padding: 10,
  },
  filterIcon: {
    width: 24,
    height: 24,
  },
  modalContainer: {
    flex: 1,
    justifyContent: "flex-end",
    alignItems: "center",
    backgroundColor: "rgba(0, 0, 0, 0.5)",
  },
  modalContent: {
    width: "100%",
    backgroundColor: "#ffffff",
    padding: 20,
    borderTopLeftRadius: 40,
    borderTopRightRadius: 40,
    alignItems: "center",
    marginTop: -10,
    zIndex: 3,
  },
  infoPanel: {
    backgroundColor: "#011F4C",
    padding: 20,
    borderTopLeftRadius: 40,
    borderTopRightRadius: 40,
    zIndex: 2,
    marginBottom: -20,
    width: "100%",
    height: "130",
  },
  infoTitleContainer: {
    flexDirection: "row",
    alignItems: "center",
    paddingBottom: 10,
  },
  infoTitle: {
    fontSize: 23,
    fontWeight: "bold",
    color: "white",
    marginRight: 10,
  },
  infoSubtitleContainer: {
    flexDirection: "row",
    alignItems: "center",
  },
  arrowImage: {
    width: 16,
    height: 16,
    marginRight: 5,
    marginBottom: 10,
  },
  infoSubtitle: {
    fontSize: 14,
    color: "#DBDBDB",
    marginBottom: 10,
  },
  closeButton: {
    position: "absolute",
    top: 10,
    right: 20,
    width: 30,
    height: 30,
    borderRadius: 15,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#DBDBDB",
    marginTop: 10,
  },
  closeButtonImage: {
    width: 20,
    height: 20,
  },
  modalTitle: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 10,
  },
  modalText: {
    fontSize: 16,
    marginBottom: 10,
  },
  modalImage: {
    width: 300,
    height: 200,
    borderRadius: 10,
    resizeMode: "cover",
    marginBottom: 20,
  },
  alertButton: {
    backgroundColor: "#FFEB3B",
    paddingVertical: 12,
    paddingHorizontal: 40,
    borderRadius: 50,
    alignItems: "center",
    justifyContent: "center",
    width: 250,
  },
  alertButtonText: {
    color: "white",
    fontWeight: "bold",
  },
  filterTitle: {
    fontSize: 20,
    fontWeight: "bold",
    marginBottom: 20,
    marginRight: 320,
    color: "#969696",
  },
  filterButtonsContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginBottom: 20,
  },
  filterOption: {
    borderStyle: "solid",
    borderColor: "#e8e8e8",
    borderWidth: 1,
    padding: 15,
    borderRadius: 16,
    width: 136,
    height: 89,
    alignItems: "center",
    marginRight: 15,
  },
  filterText: {
    fontSize: 14,
    fontWeight: "bold",
  },
  filterDescription: {
    fontSize: 9,
    color: "gray",
  },
});

export default DetailsScreen;
